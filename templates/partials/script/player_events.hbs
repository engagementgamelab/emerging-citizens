{{!< default}}
{{!-- 
/**
 * Emerging Citizens
 * Developed by Engagement Lab, 2016
 * ==============
 * 
 * Script includes partial for PLAYERS socket.io events
 * ==========
 */
--}}

var playerWasReconnected = false;

var socketEvents = function(eventId, eventData) {

    switch (eventId) {

        case 'connect':

            console.log('--- Connected to server ---');

            // Connected, let's sign-up for to receive messages for this room
            socket.emit('room', emitData('player'));

            break;

        case 'player:loggedin':

            $('#gameContent').html(eventData.html);

            $('#debug-info').text('Player id: ' + eventData.id);
            
            console.log (eventData.id + " is the player ID");

            playerId = eventData.id;

            // Get events script for the game type logged in to
            $.getScript( '/js/events/' + eventData.gameType + '.js' )
              .done(function( script, textStatus ) {
                console.log( textStatus );
              })
              .fail(function( jqxhr, settings, exception ) {
                console.error('Unable to load %s (error: "%s")', eventData.gameType + '.js', exception);
            });

            break;

        case 'player:reconnected': 

            // Set local player state as reconnected
            playerWasReconnected = true;

            break;

        case 'game:start':

            $('#gameContent').html(eventData);

            // Change background
            $('.body').addClass('player');

            sessionStorage.setItem('voted', false);

            break;

        case 'game:ending':

            $('#error-box').text(eventData);
            $('#error-box').show();

            break;

        case 'game:ended':

            // Remove saved game code since game is over
            sessionStorage.removeItem('gameCode');

            $('#gameContent').html(eventData);

            break;

        case 'game:resumed':

            $('#error-box').hide();

            break;

        case 'game:notfound':

            $('#error-box').text('game not found!');
            $('#error-box').show();

            break;

        case 'game:countdown_ending':

            $('.form .error').fadeIn().html(eventData);

            break;

        case 'game:end':
        case 'game:round_over':
        case 'game:countdown_end':
        case 'players:update':

            $('#gameContent').html(eventData);

            var nextRoundAnim = new TimelineLite({ paused:true , onComplete:function() {}});
            nextRoundAnim.from($('#nextRound'), 2.5, { scale: 0, opacity:0, ease:Elastic.easeOut }, { scale: 1, opacity: 1, display: 'block'});
            nextRoundAnim.play();
            break;

        {{#ifeq gameType 'htyi'}}
        
            case 'hashtags:received':  

                // TODO: Server-side?    
                $('#gameContent').html(eventData);

                // Remove current player's submission from selections
                $('#vote-submission').find('button[data-package="' + sessionStorage.getItem('playerHashtag') + '"]').remove();

                // Hide voting?
                if(playerWasReconnected && (sessionStorage.getItem('voted') === 'true'))
                {
                    $('#' + $('#submitted').data('hide')).remove();
                    $('#submitted').show();
                }

                break;

            case 'hashtag:tryagain':

                $('#tweet_input').val('').addClass('invalid');
                $('#tweet-submission .error').text(eventData).fadeIn();

                break;

            // Hashtag successfully submitted
            case 'hashtag:success':

                $('#countdownTimer').empty();
                $('#tweet-submission').hide();
                $('#submitted').show();

                sessionStorage.setItem('playerHashtag', eventData);

                break;

        {{/ifeq}}

        {{#ifeq gameType 'wikigeeks'}}
        
             // Begin article search
            case 'article:found':

                $('#gameContent').html(eventData);

                break;

        {{/ifeq}}

        default:

            console.warn('No handler found for event "' + eventId + '" in socketEvents.');

            break;

    }

};