{{!< default}}
{{!-- 
/**
 * Emerging Citizens
 * Developed by Engagement Lab, 2016
 * ==============
 * 
 * Script includes partial for individual sections
 * ==========
 */
--}}

<script type="text/javascript">

  var timeline = new TimelineLite();

	// For socket debugging
	localStorage.debug = '*';

	ion.sound({
    sounds: [
        {
            name: "button_tiny"
        }
    ],
    volume: 0.5,
    path: "/sfx/",
    preload: true,
    ready_callback: function(obj) { console.log('sounds ready', obj); }
	});

  // All possible socket event IDs
	var eventIds = [

		'connect',
		'player:id',
		'players:update',

		'game:start',
		'game:ending',
		'game:end',
		'game:resumed',
		'game:notfound',
		'game:countdown',
		'game:countdown_ending',
		'game:countdown_end',
		'game:round_over',
		
		'hashtag:submitted',
		'hashtags:received',
		'hashtags:reveal'
	
	];

	function updateUrl(url) {
   
    if (typeof(window.history.pushState) !== "undefined")
      window.history.pushState(null, null, url);
  
  }

	$(document).ready(function() {

		{{#ifeq section 'moderator'}}

			$('#btn_submit').click(function(e) {
				var data = $(":input").serializeArray();

			  $.post( 
			  	"/api/create/",
					data,
					function( data ) {
					  window.location = data;
					}
				);
			});

		{{else}}
		    
			  var gameCode;
				
				// Open socket connection
		    var socket = io();
			
				// Load events for players
				{{> script/player_events}}

				/**
				 * Listen for forms that dispatch socket events.
				 *
				 * ### Examples:
				 *
				 * @class sections
				 */
				$(document).on('click', '.form :submit.submit', function() {
					
					var event = $(this).data().event;
					var pkg = $(this).data().package;

					if($.isPlainObject(pkg)) {
						$.each(Object.keys(pkg), function( key, value ) {
						  pkg[value] = $(pkg[value].toString()).val();
						});
					}
					else
						pkg = $(pkg).val()
					
					socket.emit(event, emitData(pkg));

					$('#submission').hide();
					$('#submitted').show();

				});

				/* 
				 Disallows input from octothorp (#) character for hashtag submission
				*/
				$(document).on('keypress', '#tweet_input', function(key) {

					if(key.charCode === 35)
						return false;

				});
				
				function emitData(data) {

					if(gameCode === undefined && typeof(data.code) !== 'undefined')
						gameCode = data.code;

					return { gameId: gameCode, msgData: data };
				}
			
				{{!-- INDEX Template Script --}}
				{{#ifeq section 'moderator/monitor'}}
				
					var gameCode = '{{game.accessCode}}-moderator';

					// Load events for moderators
					{{> script/moderator_events}}
				
				{{/ifeq}}

				$.each(eventIds, function(index, id) {
				  
				  socket.on(id, function(eventData) {

						console.log("EVENT ID: ", id);
						console.log("EVENT DATA: (" + eventData + ")");

					 	socketEvents(id, eventData); 
					});

				});

			{{#ifeq section 'index'}}
				
				$('#btn_submit_code').click(function(evt) {
					window.location = '/game/' + $('#class_code').val();
				});


				$(document).on('click', '.btn.game_entry', function() {
					
					var type = $(this).data().game;

				  $.get( 
				  	"/game/" + type,
						function( data ) {
							$('.body').addClass('login');
							$('.navbar').slideUp();

	            $('#gameContent').html(data);

	            $('.form input[type=submit]')
	            .hover(function(evt) {
	            
	            	timeline.to(evt.currentTarget, .5, { ease: Elastic.easeOut, scale:1.2 });
	            
	            })
	            .mouseleave(function(evt) {

	            	timeline.from(evt.currentTarget, .5, { scale:1.2 });
	            
	            });


	            // updateUrl('/game/'+type);
						}
					);

				});

			{{/ifeq}}

		{{/ifeq}}
		
});

</script>